generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  // provider = "postgresql"
  provider = "mysql"
  url      = env("DATABASE_URL")
}


//- tasks

enum task_status {
  pending
  completed
}

model tasks {
  id Int @id @default(autoincrement())
}


//- storage

model Folder {
  id Int @id @default(autoincrement())
}


//- main models


model service_categories {
  id Int @id @default(autoincrement())

  name String @unique
  page String @unique
  description String
  icon String

  is_active Boolean @default(true)
  services services[]  

  created_at String
}

model services {
  id Int @id @default(autoincrement())
  title String
  description String

  is_active Boolean @default(true)

  service_category_id Int
  service_category service_categories @relation(fields: [service_category_id], references: [id])

  image String

  client_feedbacks client_feedbacks[]

  created_at String
}


model service_showcases {
  id Int @id @default(autoincrement())
  title String
  description String
  image String
}

model client_feedbacks {
  id Int @id @default(autoincrement())
  client_name String
  client_message String
  client_page_name String

  service_id Int
  service services @relation(fields: [service_id], references: [id])

  sent_at String
}


model contact_messages {
  id Int @id @default(autoincrement())
  client_name String
  client_phone String
  client_email String
  subject String
  message String
  sent_at String
}

model pages_seo_content {
  id Int @id @default(autoincrement())
  page_code String @unique
  title String
  description String
  keywords String
  page_content String
}


model contact_data {
  id Int @id @default(0)
  whatsapp_phone String
  email String
  location String
  phone_number String

  tiktok_account_link String
  instagram_account_link String
  facebook_account_link String
}

model faqs {
  id        Int     @id @default(autoincrement())
  question  String
  answer    String
  is_active Boolean @default(true)

  created_at String
}


//- emenu work

model emenu_feedbacks {
  id Int @id @default(autoincrement())
  client_name String
  position String
  feedback_message String
}

model emenu_faqs {
  id Int @id @default(autoincrement())
  question String
  answer String
}

model emenu_design_types {
  id Int @id @default(autoincrement())
  name String
  description String
  image String

  showcases emenu_showcase[]
}

model emenu_showcase {
  id Int @id @default(autoincrement())
  page_name String
  page_image String
  page_description String
  page_logo String
  qrcode_image String
  emenu_link String

  emenu_design_type_id Int
  emenu_design_type emenu_design_types @relation(fields: [emenu_design_type_id], references: [id])
}


model managers {
  id Int @id @default(autoincrement())
  name String
  email String
  password String
}

//- shared services

enum service_type {
  designs
  sponsored_ads
  intelligent_marketing
  video_montage
}

model services_feedback {
  id Int @id @default(autoincrement())
  client_name String
  client_page_name String
  client_message String

  service_type service_type
}

model services_faqs {
  id Int @id @default(autoincrement())
  question String
  answer String
  service_type service_type
}

//- designs
model designs_services {
  id Int @id @default(autoincrement())
  name String
  description String
  is_published Boolean @default(true)
  page_code String @unique
  image String

  created_at String

  showcases designs_showcase[]
}

model designs_showcase {
  id Int @id @default(autoincrement())
  name String
  description String
  image String
  client_name String
  client_page_name String

  design_service_id Int
  design_service designs_services @relation(fields: [design_service_id], references: [id])
}

model sponsored_ads_services {
  id Int @id @default(autoincrement())
  name String
  description String
  image String
  page_code String @unique

  showcases sponsored_ads_showcases[]
}

model sponsored_ads_showcases {
  id Int @id @default(autoincrement())
  name String
  description String
  brand_name String
  platform String
  image String

  sponsored_ads_service_id Int
  sponsored_ads_service sponsored_ads_services @relation(fields: [sponsored_ads_service_id], references: [id])
}